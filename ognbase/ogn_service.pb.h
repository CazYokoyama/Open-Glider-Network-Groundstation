/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4-dev */

#ifndef PB_OGN_SERVICE_PB_H_INCLUDED
#define PB_OGN_SERVICE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _type_4 {
    pb_callback_t header;
    pb_callback_t value1;
    pb_callback_t value2;
    pb_callback_t value3;
} type_4;

typedef struct _type_5 {
    pb_callback_t header;
} type_5;

typedef struct _UnionMessage {
    float latitude;
    float longitude;
    bool has_Type_4;
    type_4 Type_4;
    bool has_Type_5;
    type_5 Type_5;
} UnionMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define type_4_init_default                      {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define type_5_init_default                      {{{NULL}, NULL}}
#define UnionMessage_init_default                {0, 0, false, type_4_init_default, false, type_5_init_default}
#define type_4_init_zero                         {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define type_5_init_zero                         {{{NULL}, NULL}}
#define UnionMessage_init_zero                   {0, 0, false, type_4_init_zero, false, type_5_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define type_4_header_tag                        1
#define type_4_value1_tag                        2
#define type_4_value2_tag                        3
#define type_4_value3_tag                        4
#define type_5_header_tag                        1
#define UnionMessage_latitude_tag                1
#define UnionMessage_longitude_tag               2
#define UnionMessage_Type_4_tag                  3
#define UnionMessage_Type_5_tag                  4

/* Struct field encoding specification for nanopb */
#define type_4_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, BYTES,    header,            1) \
X(a, CALLBACK, OPTIONAL, BYTES,    value1,            2) \
X(a, CALLBACK, OPTIONAL, BYTES,    value2,            3) \
X(a, CALLBACK, OPTIONAL, BYTES,    value3,            4)
#define type_4_CALLBACK pb_default_field_callback
#define type_4_DEFAULT NULL

#define type_5_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, BYTES,    header,            1)
#define type_5_CALLBACK pb_default_field_callback
#define type_5_DEFAULT NULL

#define UnionMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    latitude,          1) \
X(a, STATIC,   REQUIRED, FLOAT,    longitude,         2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  Type_4,            3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  Type_5,            4)
#define UnionMessage_CALLBACK NULL
#define UnionMessage_DEFAULT NULL
#define UnionMessage_Type_4_MSGTYPE type_4
#define UnionMessage_Type_5_MSGTYPE type_5

extern const pb_msgdesc_t type_4_msg;
extern const pb_msgdesc_t type_5_msg;
extern const pb_msgdesc_t UnionMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define type_4_fields &type_4_msg
#define type_5_fields &type_5_msg
#define UnionMessage_fields &UnionMessage_msg

/* Maximum encoded size of messages (where known) */
/* type_4_size depends on runtime parameters */
/* type_5_size depends on runtime parameters */
/* UnionMessage_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
